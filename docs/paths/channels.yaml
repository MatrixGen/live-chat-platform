/channels:
  get:
    summary: Get user's channels
    tags: [Channels]
    security:
      - bearerAuth: []
    parameters:
      - name: page
        in: query
        schema:
          type: integer
          minimum: 1
          default: 1
      - name: limit
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
    responses:
      200:
        description: List of channels
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    channels:
                      type: array
                      items:
                        $ref: '#/components/schemas/Channel'
                    pagination:
                      $ref: '#/components/schemas/Pagination'

  post:
    summary: Create a new channel
    tags: [Channels]
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChannelCreate'
    responses:
      201:
        description: Channel created successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    channel:
                      $ref: '#/components/schemas/Channel'

/channels/{channelId}:
  get:
    summary: Get channel details
    tags: [Channels]
    security:
      - bearerAuth: []
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: Channel details
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  type: object
                  properties:
                    channel:
                      $ref: '#/components/schemas/Channel'
      404:
        description: Channel not found

  patch:
    summary: Update channel
    tags: [Channels]
    security:
      - bearerAuth: []
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              displayName:
                type: string
              description:
                type: string
    responses:
      200:
        description: Channel updated
      403:
        description: Not channel owner
      404:
        description: Channel not found

/channels/{channelId}/join:
  post:
    summary: Join a channel
    tags: [Channels]
    security:
      - bearerAuth: []
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: Successfully joined channel
      404:
        description: Channel not found

/channels/{channelId}/leave:
  post:
    summary: Leave a channel
    tags: [Channels]
    security:
      - bearerAuth: []
    parameters:
      - name: channelId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: Successfully left channel
      404:
        description: Channel not found